{"ast":null,"code":"var _excluded = [\"formatHour\", \"locale\", \"number\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Mark from './Mark';\nimport { formatHour as defaultFormatHour } from './shared/hourFormatter';\nexport default function HourMark(_ref) {\n  var _ref$formatHour = _ref.formatHour,\n      formatHour = _ref$formatHour === void 0 ? defaultFormatHour : _ref$formatHour,\n      locale = _ref.locale,\n      number = _ref.number,\n      otherProps = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Mark, _extends({\n    number: number && formatHour(locale, number)\n  }, otherProps));\n}\nHourMark.propTypes = {\n  formatHour: PropTypes.func,\n  locale: PropTypes.string,\n  number: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};","map":null,"metadata":{},"sourceType":"module"}